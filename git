git配置
git config --global user.email YourEmailAdress@gmail.com
git comfig --global user.name “YourName”
git config --global core.editor vim 	//设置用vim编辑器
git config --global merge.tool vimdiff	//对比两次提交的不同

查看git命令的帮助手册,用config命令举例
git help config


有项目目录时初始化为Git项目？
git init

没有项目目录初始为Git项目？
git init ProjectName

查看git 状态
git status

添加一个文件至git状态？
git add filename

添加项目下所有文件至git壮态？
git add .

git提交？
git commit –m “提交的备注信息”

创建一个名为Zjw的分支
git branch Zjw

查看都有哪些分支
git branch

跳转到Zjw分支
git checkout –b Zjw

在Zjw分支写了文件，commit
git commit –m “备忘message…”

图化看commit log
git log --graph

线化看commit log
git log --oneline

也可图线合一
git log --oneline --graph 

将Zjw分支写的代码合并到master分支
先在master分支上，用 git branch 看当前在哪个分支上，再 
git merge Zjw

删除一个分支
git branch –d BranchName

整体回到任一次commit
git reset --hard HEAD的ID值

查看过往未来的<HEAD>ID
git reflog

单一个文件回到任一版commit中
git checkout <HEAD>ID --fileName

如何解决冲突
将冲突文件中的冲突报错信息手改一下，例：
<<<<<<HEAD
# edited in master
====
# edited in SmallBranchName
>>>>>> SmallBranchName
将上面整体改为 # edited in master and SmallBranchName


0.config

git config --global color.ui true
git config --global user.name "zhangjingwei33"
git config --global user.email "zhangjingwei33@gmail.com"

1.push
…or create a new repository on the command line


有项目目录：
git init
没有顶目目录：
git init ProjectName
echo "# blog" >> README.md
git add README.md
git add . （添加所有文件）
git add --all(添加所有文件）
git commit -m "first commit"

git remote add origin git@github.com:zhangjinwei33/ProjectName.git
git push -u origin master

…or push an existing repository from the command line

git remote add origin git@github.com:zhangjingwei33/blog.git
git push -u origin master



ssh-keygen -t rsa -b 4096 -C "zhangjingwei33@gmail.com" #得到密钥
将生成的 id_rsa.pub 文件中的内容复制到github.com上的ssh中。
ssh -T git@github.com #测试连成功没

3.常用命令
git status //看状态
git log --oneline//线性看日志
git log --graph//分支图型看日志
git reset --hard HEAD//回到从前
git reset --hard HEAD~n //回到前几个
git reset --hard 13be9a7//回到ID号时
git reset c6762a1 --1.py //单个文件回到ID号时

4.分支
git branch BranchName//建分支
git branch //看分支
git checkout BranchName//跳转分支
git branch -d BranchName//删除分支
在master分支上合并
git merge --no-ff -m "keep merge info" boss development


